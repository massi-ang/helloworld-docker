---
RecipeFormatVersion: 2020-01-25
ComponentName: com.example.HelloWorldDocker
ComponentVersion: VERSION
ComponentDescription: My first AWS IoT Greengrass component.
ComponentPublisher: Amazon
ComponentDependencies:
  aws.greengrass.TokenExchangeService:
    VersionRequirement: ">=0.0.0"
    DependencyType: HARD
ComponentConfiguration:
  DefaultConfiguration:
    Message: world
    accessControl:
      aws.greengrass.ipc.mqttproxy:
        "com.example.ecr:all":
          policyDescription: Allows access to publish to test/topic.
          operations:
            - "*"
          resources:
            - "*"
Manifests:
  - Platform:
      os: linux
      containerPlatform: docker    
    Lifecycle:
      Run: 
        Script: |-
          registry=$(aws ecr describe-registry --query "registryId" --out text)
          aws ecr get-login-password | docker login --username AWS --password-stdin $registry.dkr.ecr.$AWS_REGION.amazonaws.com
          cat > docker-compose.yaml <<EOF
          version: '3'
          services:
            my_hello:
              image: IMAGE
              environment:
                - AWS_REGION
                - MESSAGE
                - TOPIC
                - AWS_CONTAINER_AUTHORIZATION_TOKEN 
                - SVCUID
                - AWS_GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT
                - AWS_GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH
              volumes:
                - /greengrass/v2:/greengrass/v2
          EOF
          docker-compose -f docker-compose.yaml up 
      Shutdown: docker-compose -f docker-compose.yaml down
  - Platform:
      os: linux
      containerPlatform: k3s    
    Lifecycle:
      Run: 
        Script: |-
          cat > deployment.yaml <<EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: private-reg
          spec:
            containers:
            - name: privateapp
              image: 699391019698.dkr.ecr.eu-west-1.amazonaws.com/helloworld-sample
              volumeMounts:
              - name: gg-root
                mountPath: /greengrass/v2
            volumes:
              - name: gg-root
                hostPath:
                  path: /greengrass/v2
                  type: Directory
            imagePullSecrets:
            - name: aws-ecr
          EOF
          kubectl apply -f deployment.yaml
        RequiresPrivilege: true 
      Shutdown: kubectl delete pod private-reg
      